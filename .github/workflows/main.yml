name: Backend Deploy
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Remote install, env setup, and PM2 deploy via SSH
        env:
          DEV_SFTP_PRIVATE_KEY: ${{ secrets.DEV_SFTP_PRIVATE_KEY }}
          DEV_HOST: ${{ secrets.DEV_HOST }}
          DEV_USER: ${{ secrets.DEV_USER }}
          DEPLOY_DIR: ${{ secrets.DEPLOY_DIR }}
          ENV: ${{ secrets.ENV }}
          ENV_FILE: ${{ secrets.ENV_FILE }}
          APP_NAME: ${{ secrets.APP_NAME }}
          START_FILE_PATH: ${{ secrets.START_FILE_PATH }}
          NPM_BASE_COMMAND: ${{ secrets.NPM_BASE_COMMAND }}
          PM2_BASE_COMMAND: ${{ secrets.PM2_BASE_COMMAND }}
        run: |
          # Write SSH key
          mkdir -p ~/.ssh
          echo "$DEV_SFTP_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Create a script to run on the remote server
          cat > deploy_script.sh << EOF
          cd $DEPLOY_DIR
          $NPM_BASE_COMMAND install
          $NPM_BASE_COMMAND audit fix --force
          echo "$ENV" > $ENV_FILE
          export NODE_ENV=production
          if ! $PM2_BASE_COMMAND list | grep -q "$APP_NAME"; then
            $PM2_BASE_COMMAND start $START_FILE_PATH --name "$APP_NAME"
          else
            $PM2_BASE_COMMAND restart -f "$APP_NAME"
          fi
          EOF
          
          # Execute the script remotely
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $DEV_USER@$DEV_HOST 'bash -s' < deploy_script.sh
          
          # Clean up
          rm ~/.ssh/id_rsa
          rm deploy_script.sh
