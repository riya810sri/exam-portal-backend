name: Backend Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy backend via SSH + SCP
        env:
          DEV_SFTP_PRIVATE_KEY: ${{ secrets.DEV_SFTP_PRIVATE_KEY }}
          DEV_HOST: ${{ secrets.DEV_HOST }}
          DEV_USER: ${{ secrets.DEV_USER }}
          DEPLOY_DIR: ${{ secrets.DEPLOY_DIR }}
          ENV: ${{ secrets.ENV }}
          ENV_FILE: ${{ secrets.ENV_FILE }} # example: config/.env
        shell: bash
        run: |
          # 1. Write private key
          echo "$DEV_SFTP_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          # 2. Save ENV content as temp file (multiline support)
          echo "$ENV" > local_env_file.env

          # 3. Clean remote dir
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${DEV_USER}@${DEV_HOST} "rm -rf ${DEPLOY_DIR}/* && mkdir -p ${DEPLOY_DIR} && mkdir -p \$(dirname ${DEPLOY_DIR}/${ENV_FILE})"

          # 4. Copy files and env
          scp -i private_key.pem -o StrictHostKeyChecking=no -r ./* ${DEV_USER}@${DEV_HOST}:${DEPLOY_DIR}/
          scp -i private_key.pem -o StrictHostKeyChecking=no local_env_file.env ${DEV_USER}@${DEV_HOST}:${DEPLOY_DIR}/${ENV_FILE}

          # 5. Cleanup
          rm private_key.pem local_env_file.env

      - name: Install dependencies & fix vulnerabilities
        run: |
          # Install dependencies
          ${{ secrets.NPM_BASE_COMMAND }} install
          
          # Fix vulnerabilities
          ${{ secrets.NPM_BASE_COMMAND }} audit fix --force

      - name: Set environment variables
        run: |
          export NODE_ENV=production

      - name: Start or restart application with PM2
        run: |
          # Check if the app is already running via PM2
          if ! pm2 show ${{ secrets.APP_NAME }}; then
            pm2 start ${{ secrets.START_FILE_PATH }} --name "${{ secrets.APP_NAME }}"
          else
            pm2 restart -f ${{ secrets.APP_NAME }}
          fi
