name: Backend Deploy
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Remote install, env setup, and PM2 deploy via SSH
        env:
          DEV_SFTP_PRIVATE_KEY: ${{ secrets.DEV_SFTP_PRIVATE_KEY }}
          DEV_HOST: ${{ secrets.DEV_HOST }}
          DEV_USER: ${{ secrets.DEV_USER }}
          DEPLOY_DIR: ${{ secrets.DEPLOY_DIR }}
          ENV: ${{ secrets.ENV }}
          ENV_FILE: ${{ secrets.ENV_FILE }}
          APP_NAME: ${{ secrets.APP_NAME }}
          START_FILE_PATH: ${{ secrets.START_FILE_PATH }}
          NPM_BASE_COMMAND: ${{ secrets.NPM_BASE_COMMAND }}
          PM2_BASE_COMMAND: ${{ secrets.PM2_BASE_COMMAND }}
        run: |
          # Write SSH key
          mkdir -p ~/.ssh
          echo "$DEV_SFTP_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          echo "$ENV" > local_env_file.env
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${DEV_USER}@${DEV_HOST} "rm -rf ${DEPLOY_DIR}/* && mkdir -p ${DEPLOY_DIR} && mkdir -p \$(dirname ${DEPLOY_DIR}/${ENV_FILE})"
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -r ./* ${DEV_USER}@${DEV_HOST}:${DEPLOY_DIR}/
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no local_env_file.env ${DEV_USER}@${DEV_HOST}:${DEPLOY_DIR}/${ENV_FILE}
          
          # Create a script to run on the remote server
          cat > deploy_script.sh << EOF
          cd $DEPLOY_DIR
          $NPM_BASE_COMMAND install
          $NPM_BASE_COMMAND audit fix --force
          
          # Run npm update to resolve dependency vulnerabilities
          $NPM_BASE_COMMAND update semver simple-update-notifier nodemon --depth 5
          
          export NODE_ENV=production
          if ! command -v $PM2_BASE_COMMAND &> /dev/null; then
            echo "PM2 not found, installing globally..."
            $NPM_BASE_COMMAND install -g pm2
          fi
          
          if $PM2_BASE_COMMAND status | grep -q "$APP_NAME"; then
            echo "Restarting existing PM2 process..."
            $PM2_BASE_COMMAND restart "$APP_NAME"
          else
            echo "Starting new PM2 process..."
            $PM2_BASE_COMMAND start $START_FILE_PATH --name "$APP_NAME"
          fi
          $PM2_BASE_COMMAND save
          EOF
          
          # Make script executable and execute it remotely
          chmod +x deploy_script.sh
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $DEV_USER@$DEV_HOST 'bash -s' < deploy_script.sh
          
          # Clean up
          rm ~/.ssh/id_rsa
          rm deploy_script.sh
